# Generated by Django 5.1.1 on 2024-10-20 23:08

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("full_name", models.CharField(blank=True, default="", max_length=50)),
                (
                    "slug",
                    models.SlugField(
                        blank=True, editable=False, max_length=255, unique=True
                    ),
                ),
                (
                    "color_mode",
                    models.CharField(
                        choices=[
                            ("light", "Light"),
                            ("dark", "Dark"),
                            ("system", "System"),
                        ],
                        default="system",
                        max_length=10,
                    ),
                ),
                (
                    "profile_picture",
                    models.CharField(
                        choices=[
                            ("bat.png", "Bat"),
                            ("bear.png", "Bear"),
                            ("beaver.png", "Beaver"),
                            ("buffalo.png", "Buffalo"),
                            ("camel.png", "Camel"),
                            ("cat.png", "Cat"),
                            ("chameleon.png", "Chameleon"),
                            ("cheetah.png", "Cheetah"),
                            ("cow.png", "Cow"),
                            ("deer.png", "Deer"),
                            ("dog.png", "Dog"),
                            ("duck.png", "Duck"),
                            ("eagle.png", "Eagle"),
                            ("elephant.png", "Elephant"),
                            ("fox.png", "Fox"),
                            ("frog.png", "Frog"),
                            ("giraffe.png", "Giraffe"),
                            ("goat.png", "Goat"),
                            ("gorilla.png", "Gorilla"),
                            ("hamster.png", "Hamster"),
                            ("hen.png", "Hen"),
                            ("hippo.png", "Hippo"),
                            ("horse.png", "Horse"),
                            ("kangaroo.png", "Kangaroo"),
                            ("koala.png", "Koala"),
                            ("lemur.png", "Lemur"),
                            ("lion.png", "Lion"),
                            ("llama.png", "Llama"),
                            ("monkey.png", "Monkey"),
                            ("ostrich.png", "Ostrich"),
                            ("owl.png", "Owl"),
                            ("panda-bear.png", "Panda-bear"),
                            ("penguin.png", "Penguin"),
                            ("pig.png", "Pig"),
                            ("polar-bear.png", "Polar-bear"),
                            ("rabbit.png", "Rabbit"),
                            ("raccoon.png", "Raccoon"),
                            ("rhinoceros.png", "Rhinoceros"),
                            ("shark.png", "Shark"),
                            ("sheep.png", "Sheep"),
                            ("sloth.png", "Sloth"),
                            ("snake.png", "Snake"),
                            ("squirrel.png", "Squirrel"),
                            ("swan.png", "Swan"),
                            ("tiger.png", "Tiger"),
                            ("turtle.png", "Turtle"),
                            ("walrus.png", "Walrus"),
                            ("wild-boar.png", "Wild-boar"),
                            ("wolf.png", "Wolf"),
                            ("zebra.png", "Zebra"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
